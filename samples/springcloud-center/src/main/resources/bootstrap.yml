# 全局配置
creed:
  center0:
    domain: creedcenter0.jufandev.com
    port: 10100
  center1:
    domain: creedcenter1.jufandev.com
    port: 10101
  center2:
    domain: creedcenter2.jufandev.com
    port: 10102
# 统一配置
spring:
  application:
    name: a-center
  security:
    user:
      name: admin
      password: admin
      roles: admin
  profiles:
    active: singleton
eureka:
  environment : product
  datacenter : cloud
  client:
    register-with-eureka: true
    fetch-registry: true
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15
  server:
# 关闭eureka的自我保护(开发配置)
    enable-self-preservation: false
# 驱逐下线的服务，间隔,5秒，默认是60，建议开发和测试环境配置
    eviction-interval-timer-in-ms: 5000
# eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    response-cache-update-interval-ms: 3000
---
# profile singleton
spring:
  profiles: singleton
server:
  port: ${creed.center0.port}
eureka:
  instance:
    hostname: ${creed.center0.domain}
  client:
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/

---
# profile peer0
spring:
  profiles: peer0
server:
  port: ${creed.center0.port}
eureka:
  instance:
    hostname: ${creed.center0.domain}
  client:
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${creed.center1.domain}:${creed.center1.port}/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@${creed.center2.domain}:${creed.center2.port}/eureka/

---
# profile peer1
spring:
  profiles: peer1
server:
  port: ${creed.center1.port}
eureka:
  instance:
    hostname: ${creed.center1.domain}
  client:
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${creed.center0.domain}:${creed.center0.port}/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@${creed.center2.domain}:${creed.center2.port}/eureka/

---
# profile peer2
spring:
  profiles: peer2
server:
  port: ${creed.center2.port}
eureka:
  instance:
    hostname: ${creed.center2.domain}
  client:
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${creed.center0.domain}:${creed.center0.port}/eureka/,http://${spring.security.user.name}:${spring.security.user.password}@${creed.center1.domain}:${creed.center1.port}/eureka/
